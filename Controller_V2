import java.time.LocalTime;
/**
 * 
 */

/**
 * @author tcazako
 *
 */
public class Controller {
	
	//int idView;
	//String rstate;
	LocalTime time;
	/////////////
	String nomSall;  // Nom de la salle
	public String getNomSall() {
		return nomSall;
	}

	public void setNomSall(String nomSall) {
		this.nomSall = nomSall;
	}

	public int getNumSalle() {
		return numSalle;
	}

	public void setNumSalle(int numSalle) {
		this.numSalle = numSalle;
	}

	public int getNbPlaces() {
		return nbPlaces;
	}

	public void setNbPlaces(int nbPlaces) {
		this.nbPlaces = nbPlaces;
	}

	String Description;  // Description de la salle
	int idroom; 		 //id de la salle
	int numSalle;		 // numero de la salle 
	int nbPlaces;		 // nombre de place ds la salle
	boolean rstate;		 // Etat de la salle
		
		Controller()// Constructeur
		{
			System.out.println("J'instancie mon Objet -->> ");
			rstate = false;
			Description = " ";
			idroom = 0;
			time = LocalTime.now();
			numSalle = 106;
			nbPlaces = 20;
			
			
		}// Fin Constructeur
		
		/**************************************************_GlobalDisplay_****************************************************/
		
		
		void GlobalDisplay(int idRoom ) //idview
		{
			//Sera charger de lancer l’IHM
			
			
			
			System.out.println(" On ouvre L'IHM ");
			System.out.println(" Heure actuelle : " + time);
		}//fin Global_Display()	*/
		
		/***************************************************_GetRoomState_***************************************************/
		
		boolean GetRoomState() // --- ( recupère l’état de la salle courante )
		{
			
			// Appel du modele pour recuperer l'état de la salle "class.getCurrState()"
			
			
			if(rstate == false)
			{
				// La Salle est Occupée ,Allume la DEL Rouge et change son "etat" ds la BD
				// Envoie de la requete qui va lire "Eteind" dans la BDD
				System.out.println(" D.E.L Rouge Allumé - Salle Occupée ");
			}
			else if(rstate == true)
			{
				// La Salle est Disponible ,Allume la DEL Verte et change son "etat" ds la BD
				// Envoie de la requete qui va lire "Allumé" dans la BDD
				System.out.println(" D.E.L Verte Allumé - Salle Disponible ");
			}
			else{ System.out.println(" Ce message ne doit jamais s'afficher ! ");}
			
			return rstate;
		} // fin GetRoomState()	*/	
		
		
	/*************************************************_SetBooking_*****************************************************/
		
		void SetBooking(int idRoom,boolean rState) // --- ( modifier l’etat de la salle courante)
		{
			
			this.idroom = idRoom;
			this.rstate = rState;
			
			// activer requête pour l'idSalle <<<<<<<>>>>>>> "INSERT INTO state FROM Salle Where id_Sal = "+idSalle+" ; " //
			
			//Changer l'état de la salle en reservé.
			// traitement pour la DEL.	---> allumer LED Blue
						
		} 	// Fin de SetBooking() bool.Ver */
		
	
						
		/***********************************************_GetRoomDesc_*******************************************************/
		
		String GetRoomDesc()   //--- (recupere la description de la salle designé)
		{
			//appelle à la BD pour recupere la description de la salle
			//-- class.getDescription()
			System.out.println(" Description : " + Description);		
			return Description;
		}	// Fin de GetRoomDesc */				
		
		/*********************************************************************************************************/
		
		void SetRoomDesc(String string)   //--- (recupere la description de la salle designé)
		{
			// appeler la requete specifique du modele qui ecrit la description
			Description = string;
		}	// Fin de GetRoomDesc */	
		
	/*************************************************_SetRoomState_*****************************************************/
		
		void SetRoomState(int idRoom,boolean rState) // --- ( modifier l’etat de la salle courante)
		{
			
			this.idroom = idRoom;
			this.rstate = rState;
			
			// activer requête pour l'idSalle <<<<<<<>>>>>>> "SELECT state FROM Salle Where id_Sal = "+idSalle+" ; " //
			
			//Changer l'état de la salle ds la BD et en fonction de l'état de la D.E.L (allumé ou éteind).
			// traitement pour la DEL.	
			
			if(rstate == false)
			{
				// La Salle est Occupée ,Allume la DEL Rouge et change son "etat" ds la BD
				// Envoie de la requete qui va ecrire "Eteind" dans la BDD
				System.out.println(" D.E.L Rouge Allumé - Salle Occupée ");
			}
			else if(rstate == true)
			{
				// La Salle est Disponible ,Allume la DEL Verte et change son "etat" ds la BD
				// Envoie de la requete qui va ecrire "Allumé" dans la BDD
				System.out.println(" D.E.L Verte Allumé - Salle Disponible ");
			}
			else{ System.out.println(" Ce message ne doit jamais s'afficher ! ");}
					
			
		} 	// Fin de SetRoomState() bool.Ver */
		
		
		//void SetRoomTransfer(int idRoom,book tState){}
	
		//////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		/*String GetRoomState() // --- ( recupère l’état de la salle courante )
		{
			//Changer l'état de la salle ds la BD et modifier la D.E.L allumé.
		if(rState == "Occupé")
		{
			
		}
		else if(rState == "Réservé")
		{
			
		}
		else if(rState == "Libre")
		{
			
		}
		else{ System.out.println("Ce message ne doit jamais s'afficher !");}
			return null;
		} 		//*/
		
		
}// fin de la classe 
